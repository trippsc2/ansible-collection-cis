---
- name: 4.2.1 | Ensure firewalld drops unnecessary services and ports
  when:
    - rhel9cis_rule_4_2_1_enabled
    - rhel9cis_firewall == 'firewalld'
  block:
    - name: 4.2.1 | Ensure firewalld drops unnecessary services and ports | Add warning # noqa command-instead-of-module risky-shell-pipe
      become: true
      ansible.builtin.shell: |-
        systemctl is-enabled firewalld.service | grep -q 'enabled' && firewall-cmd --list-all --zone="$(firewall-cmd --list-all | awk '/\(active\)/ { print $1 }')" | grep -P -- '^\h*(services:|ports:)'
      changed_when: false
      failed_when: false
      register: _rhel9cis_firewalld_services

    - name: 4.2.1 | Ensure firewalld drops unnecessary services and ports | Add warning
      ansible.builtin.include_tasks: ../add-warning.yml
      vars:
        _rhel9cis_warning_rule: '4.2.1'
        _rhel9cis_warning_description: 
          - Remediation cannot be automated. Please review the output below for unnecessary firewalld services and ports.
          - ''
          - '{{ _rhel9cis_firewalld_services.stdout_lines }}'

- name: 4.2.2 | Ensure firewalld loopback traffic is configured
  when:
    - rhel9cis_rule_4_2_2_enabled
    - rhel9cis_firewall == 'firewalld'
  become: true
  block:
    - name: 4.2.2 | Ensure firewalld loopback traffic is configured | firewalld interface
      ansible.posix.firewalld:
        zone: trusted
        interface: lo
        permanent: true
        state: enabled

    - name: 4.2.2 | Ensure firewalld loopback traffic is configured | firewalld block IPv4 loopback rule
      ansible.posix.firewalld:
        rich_rule: 'rule family=ipv4 source address="127.0.0.1" destination not address="127.0.0.1" drop'
        permanent: true
        state: enabled
    
    - name: 4.2.2 | Ensure firewalld loopback traffic is configured | firewalld block IPv4 loopback zone rule
      ansible.posix.firewalld:
        rich_rule: 'rule family=ipv4 source address="127.0.0.1" destination not address="127.0.0.1" drop'
        zone: trusted
        permanent: true
        state: enabled

    - name: 4.2.2 | Ensure firewalld loopback traffic is configured | firewalld block IPv6 loopback rule
      ansible.posix.firewalld:
        rich_rule: 'rule family=ipv6 source address="::1" destination not address="::1" drop'
        permanent: true
        state: enabled
    
    - name: 4.2.2 | Ensure firewalld loopback traffic is configured | firewalld block IPv6 loopback zone rule
      ansible.posix.firewalld:
        rich_rule: 'rule family=ipv6 source address="::1" destination not address="::1" drop'
        zone: trusted
        permanent: true
        state: enabled
